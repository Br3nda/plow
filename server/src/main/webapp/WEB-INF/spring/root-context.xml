<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:datagraph="http://www.springframework.org/schema/data/graph"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
  <!-- Handle both unit test setup and deployed setup -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="ignoreResourceNotFound" value="true"/>
      <property name="locations">
          <list>
              <value>classpath:plow.properties</value>
              <value>file:resources/plow.properties</value>
          </list>
      </property>
  </bean>

  <!-- Root Context: defines shared resources visible to all other web components -->
  <context:annotation-config />
  <context:component-scan base-package="com.breakersoft.plow" />

  <tx:annotation-driven />

  <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
    destroy-method="close">
    <property name="driverClass" value="org.postgresql.Driver" />
    <property name="jdbcUrl" value="${plow.jdbc.url}" />
    <property name="username" value="${plow.jdbc.username}" />
    <property name="password" value="${plow.jdbc.password}" />
    <property name="maxConnectionsPerPartition" value="50" />
    <property name="minConnectionsPerPartition" value="25" />
    <property name="partitionCount" value="4" />
    <property name="acquireIncrement" value="10" />
    <property name="statementsCacheSize" value="200" />
  </bean>

  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="thriftAspect" class="com.breakersoft.plow.thrift.ThriftAspect"/>
  <aop:aspectj-autoproxy>
    <aop:include name="thriftAspect" />
  </aop:aspectj-autoproxy>

  <task:annotation-driven/>

  <bean id="orphanProcChecker" class="com.breakersoft.plow.crond.OrphanProcChecker"/>
  <bean id="downNodeChecker" class="com.breakersoft.plow.crond.DownNodeChecker"/>

  <task:scheduler id="crondScheduler" pool-size="4"/>
  <task:scheduled-tasks scheduler="crondScheduler">
    <!--
        Run the orphan proc checker every 30 seconds, after 2 min startup delay
        that allows all nodes to ping in after server downtime.
     -->
    <task:scheduled ref="orphanProcChecker" method="start" fixed-delay="30000" initial-delay="120000"/>
    <!--
        Run the orphan proc checker every 30 seconds, after 2 min startup delay
        that allows all nodes to ping in after server downtime.
    -->
    <task:scheduled ref="downNodeChecker" method="start" fixed-delay="30000" initial-delay="120000"/>

  </task:scheduled-tasks>

</beans>
